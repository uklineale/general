{
  "name": "collect-json",
  "author": {
    "name": "Lloyd Brookes",
    "email": "75pound@gmail.com"
  },
  "version": "1.0.8",
  "description": "Returns a stream which becomes readable with a single value once all (valid) JSON is received.",
  "repository": {
    "type": "git",
    "url": "https://github.com/75lb/collect-json.git"
  },
  "license": "MIT",
  "main": "./lib/collect-json.js",
  "keywords": [
    "stream",
    "collect",
    "all",
    "json",
    "buffer",
    "transform"
  ],
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "tape test/*.js",
    "docs": "jsdoc2md -t jsdoc2md/README.hbs lib/*.js > README.md; echo"
  },
  "dependencies": {
    "collect-all": "^1.0.2",
    "stream-connect": "^1.0.2",
    "stream-via": "^1.0.3"
  },
  "devDependencies": {
    "jsdoc-to-markdown": "^1.3.3",
    "tape": "^4.5.1"
  },
  "readme": "[![view on npm](http://img.shields.io/npm/v/collect-json.svg)](https://www.npmjs.org/package/collect-json)\n[![npm module downloads](http://img.shields.io/npm/dt/collect-json.svg)](https://www.npmjs.org/package/collect-json)\n[![Build Status](https://travis-ci.org/75lb/collect-json.svg?branch=master)](https://travis-ci.org/75lb/collect-json)\n[![Dependency Status](https://david-dm.org/75lb/collect-json.svg)](https://david-dm.org/75lb/collect-json)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](https://github.com/feross/standard)\n\n<a name=\"module_collect-json\"></a>\n\n## collect-json\nReturns a stream which becomes readable with a single value once all (valid) JSON is received.\n\n<a name=\"exp_module_collect-json--collectJson\"></a>\n\n### collectJson([callback]) ⇒ <code>[Duplex](https://nodejs.org/api/stream.html#stream_class_stream_duplex)</code> ⏏\n**Kind**: Exported function  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| [callback] | <code>function</code> | called with the collected json data, once available. The value returned by the callback will be passed downstream. |\n\n**Example**  \nAn example command-line client script - JSON received at stdin is stamped with `received` then written to stdout.\n```js\nvar collectJson = require(\"collect-json\")\n\nprocess.stdin\n    .pipe(collectJson(function(json){\n        json.received = true\n        return JSON.stringify(json)\n    }))\n    .on(\"error\", function(err){\n        // input from stdin failed to parse\n    })\n    .pipe(process.stdout)\n```\n\n* * *\n\n&copy; 2015-16 Lloyd Brookes \\<75pound@gmail.com\\>. Documented by [jsdoc-to-markdown](https://github.com/jsdoc2md/jsdoc-to-markdown).\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/75lb/collect-json/issues"
  },
  "_id": "collect-json@1.0.8",
  "dist": {
    "shasum": "0c63da89ed5b436323ed89069b5b7855bb5e7f5b"
  },
  "_from": "collect-json@^1.0.8",
  "_resolved": "https://registry.npmjs.org/collect-json/-/collect-json-1.0.8.tgz"
}
